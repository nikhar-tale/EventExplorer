name: Android Release

on:
  push:
    branches: [ main ]          # daily builds
  create:
    tags:                       # e.g. v1.2.3   ‚Üí triggers real release
      - v*

jobs:
  build-android:
    runs-on: ubuntu-latest

    steps:
    # 1Ô∏è‚É£  Checkout
    - uses: actions/checkout@v3

    # 2Ô∏è‚É£  Java (Gradle 8 needs JDK17+)
    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17

    # 3Ô∏è‚É£  Flutter
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.22.0'

    # 4Ô∏è‚É£  Caches (pub + gradle)  ‚ö°
    - uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          ~/.gradle/caches
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}-gradle

    # 5Ô∏è‚É£  Re-create keystore & key.properties from secrets
    - name: Decode keystore
      run: |
        echo "$KEYSTORE_BASE64" | base64 -d > android/app/release.keystore
        cat <<EOF > android/key.properties
        storePassword=${{ secrets.KEYSTORE_PASSWORD }}
        keyPassword=${{ secrets.KEY_PASSWORD }}
        keyAlias=${{ secrets.KEY_ALIAS }}
        storeFile=release.keystore
        EOF
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

    # 6Ô∏è‚É£  Get deps & static checks
    - run: flutter pub get
    - run: flutter analyze --no-fatal-warnings  # optional looseness
    - run: flutter test

    # 7Ô∏è‚É£  Build signed AAB & APK
    - run: flutter build appbundle --release
    - run: flutter build apk --release --split-per-abi

    # 8Ô∏è‚É£  Upload as build artifacts (always)
    - uses: actions/upload-artifact@v3
      with:
        name: android-build
        path: |
          build/app/outputs/bundle/release/app-release.aab
          build/app/outputs/flutter-apk/*.apk

    # 9Ô∏è‚É£  Create a GitHub Release when a tag is pushed
    - if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2    # creates release + uploads assets :contentReference[oaicite:0]{index=0}
      with:
        files: |
          build/app/outputs/bundle/release/app-release.aab
          build/app/outputs/flutter-apk/*.apk

    # # üîü  (Optional) Distribute to Firebase testers
    # - if: ${{ secrets.FIREBASE_SERVICE_ACCOUNT != '' }}
    #   uses: wzieba/Firebase-Distribution-Github-Action@v1   # uploads to Firebase App Distribution :contentReference[oaicite:1]{index=1}
    #   with:
    #     appId: ${{ secrets.FIREBASE_APP_ID }}
    #     serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
    #     releaseNotesFile: CHANGELOG.md
    #     groups: testers
    #     file: build/app/outputs/bundle/release/app-release.aab
